# Copyright 2016 Schlomo Schapiro
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if [ "${grub_platform}" == "efi" ]; then
    insmod efi_gop
    insmod efi_uga
fi

if [ "${grub_platform}" == "pc" ]; then
    insmod vbe
fi

if loadfont unicode ; then
	if keystatus --shift ; then true ; else
		set gfxmode=1920x1080,1440x900,1280x1024,1280x800,1366x768,1024x768
        export gfxmode
		set gfxpayload=keep
        export gfxpayload
		terminal_output gfxterm
	fi
fi


set color_normal=black/white
set color_highlight=white/blue
export color_normal
export color_highlight

if cpuid -l ; then
    set arch=amd64
    set not_arch=i386
else
    set arch=i386
    set not_arc=amd64
fi
export arch
export not_arch

set common="noeject noprompt splash locale=de_DE bootkbd=de console-setup/layoutcode=de libata.allow_tpm=1"
export common

submenu "Ubuntu 18.04.1 Bionic" {
	menuentry "Ubuntu 18.04.1 amd64 ToRAM" {
		set iso=/ubuntu-18.04.1-desktop-amd64.iso
		loopback loop $iso
		linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$iso $common toram --
		initrd (loop)/casper/initrd.lz
	}

	menuentry "Ubuntu 18.04.1 amd64" {
		set iso=/ubuntu-18.04.1-desktop-amd64.iso
		loopback loop $iso
		linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$iso $common --
		initrd (loop)/casper/initrd.lz
	}

}


submenu "Ubuntu 16.04.4 Xenial" {
	menuentry "Ubuntu 16.04.4 amd64 ToRAM" {
		set iso=/ubuntu-16.04.4-desktop-amd64.iso
		loopback loop $iso
		linux (loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=$iso $common toram --
		initrd (loop)/casper/initrd.lz
	}

	menuentry "Ubuntu 16.04.4 amd64" {
		set iso=/ubuntu-16.04.4-desktop-amd64.iso
		loopback loop $iso
		linux (loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=$iso $common --
		initrd (loop)/casper/initrd.lz
	}

}

submenu "DISABLED Ubuntu 17.04" {
	menuentry "Ubuntu 17.04 amd64 ToRAM" {
		set iso=/ubuntu-17.10-desktop-amd64.iso
		loopback loop $iso
		linux (loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=$iso $common toram --
		initrd (loop)/casper/initrd.lz
	}

	menuentry "Ubuntu 17.04 amd64" {
		set iso=/ubuntu-17.04-desktop-amd64.iso
		loopback loop $iso
		linux (loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=$iso $common --
		initrd (loop)/casper/initrd.lz
	}


}

set ubuntu_common="keyboard-configuration/layoutcode=de libata.allow_tpm=1"
export ubuntu_common

function ubuntu_net_boot {
    set dist=$1
    set disturl=http://archive.ubuntu.com/ubuntu/dists/$dist
    if cpuid -l ; then
        set arch=amd64
    else
        set arch=i386
    fi
    echo "Booting Ubuntu $dist ($arch) Manual Installer"
    linux16 /ipxe.lkrn dhcp "&&" initrd $disturl/main/installer-$arch/current/images/netboot/ubuntu-installer/$arch/initrd.gz "&&" boot $disturl/main/installer-$arch/current/images/netboot/ubuntu-installer/$arch/linux $ubuntu_common "||" shell
}

submenu "Ubuntu from Internet" {
    menuentry "Ubuntu 16.04 xenial" {
        ubuntu_net_boot xenial
    }

    menuentry "Ubuntu 16.10 yakkety" {
        ubuntu_net_boot yakkety
    }

    menuentry "Ubuntu 17.04 zesty" {
        ubuntu_net_boot zesty
    }
 
    menuentry "Ubuntu 17.10 artful" {
        ubuntu_net_boot artful
    }

    menuentry "Ubuntu 18.04 bionic" {
        ubuntu_net_boot bionic
    }

    menuentry "Ubuntu 18.10 cosmic" {
        ubuntu_net_boot cosmic
    }
	
    menuentry "Ubuntu 19.04 disco" {
        ubuntu_net_boot disco
    }
	
    menuentry "Ubuntu devel $arch" {
        ubuntu_net_boot devel
    }
}


menuentry " " {
    true
}

menuentry "Archlinux network boot" {
    linux16 /ipxe.lkrn dhcp "&&" chain https://www.archlinux.org/releng/netboot/archlinux.ipxe
}

menuentry " " {
    true
}

menuentry "Memtest 86+ 5.01" {
	linux16 /memtest86+-5.01.bin
}

menuentry "SystemRescueCd i386 5.3.2" {
    set iso=/systemrescuecd-x86-5.3.2.iso
	loopback loop $iso
	linux (loop)/isolinux/rescue32 isoloop=$iso setkmap=de docache dostartx rootpass=linux libata.allow_tpm=1
	initrd (loop)/isolinux/initram.igz
}

menuentry "SystemRescueCd 64bit 8.05" {
    set iso=/systemrescue-8.05-amd64.iso
	loopback loop $iso
	linux (loop)/sysresccd/boot/x86_64/vmlinuz img_label=INSTALL img_loop=$iso archisobasedir=sysresccd setkmap=de copytoram dostartx rootpass=linux nofirewall libata.allow_tpm=1
	initrd (loop)/sysresccd/boot/intel_ucode.img (loop)/sysresccd/boot/amd_ucode.img (loop)/sysresccd/boot/x86_64/sysresccd.img
}

submenu "OPAL" {
	menuentry "sedutil 32bit Rescue" {
		linux16 /memdisk
		initrd16 /opal/RESCUE32.img
	}
	menuentry "sedutil 64bit Rescue" {
		linux /opal/rescue64/bzImage loglevel=0 libata.allow_tpm=1 
		initrd /opal/rescue64/rootfs.cpio.xz
	}
	menuentry "PBA Boot 32bit BIOS" {
		linux16 /memdisk
		initrd16 /opal/BOOT32.img
	}
	menuentry "PBA Boot 64bit BIOS" {
		linux /opal/uefi64/bzImage loglevel=0 libata.allow_tpm=1 
		initrd /opal/uefi64/rootfs.cpio.xz
	}
}
menuentry " " {
    true
}

submenu "internal" {
	menuentry "List devices/partitions" {
		ls -l
		sleep --interruptible 9999
	}

	menuentry "Load storage drivers" {
		insmod lvm
		insmod dm_nv
		insmod mdraid09_be
		insmod mdraid09
		insmod mdraid1x
		insmod raid5rec
		insmod raid6rec
		insmod ohci
		insmod uhci
        insmod xhci
		insmod usbms
		update_paths
	}

	menuentry "Mount encrypted volumes (LUKS and geli)" {
		insmod luks
		insmod geli

		cryptomount -a
	}

	menuentry "Enable serial terminal" {
		serial
		terminal_input --append serial
		terminal_output --append serial
	}
}

if [ "${grub_platform}" == "efi" ]; then
	menuentry "Launch EFI Shell" {
		chainloader /Shellx64.efi
	}
else
	menuentry "Boot to BIOS Hard Disk" {
		chainloader +1
	}
fi

menuentry "Reboot" {
	reboot
}

menuentry "Poweroff" {
	halt
}
